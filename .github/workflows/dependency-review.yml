name: Dependency Review

on:
  workflow_dispatch:
  pull_request:
    branches: [master]
    paths:
      - 'requirements.txt'
      - 'setup.py'
      - '.github/workflows/**'
  push:
    branches: [master]
    paths:
      - 'requirements.txt'
      - 'setup.py'
      - '.github/workflows/**'

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    # This job will only run on pull request events
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          deny-licenses: 'GPL-3.0, AGPL-3.0'
          fail-on-severity: 'high'
          # For pull requests, these are set automatically
          # For other events, we'd need to specify these manually

  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run security scan with Bandit
        run: bandit -r nyc_landmarks/ -f json -o bandit-results.json || true

      - name: Convert Bandit results to SARIF
        run: |
          echo '{
            "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
            "version": "2.1.0",
            "runs": [{"tool": {"driver": {"name": "Bandit"}}, "results": []}]
          }' > bandit-results.sarif
          if [ -f bandit-results.json ]; then
            jq -r '[.results[] | {
              "ruleId": .test_id,
              "message": {"text": .issue_text},
              "level": (if .issue_severity == "HIGH" then "error" elif .issue_severity == "MEDIUM" then "warning" else "note" end),
              "locations": [{"physicalLocation": {"artifactLocation": {"uri": .filename}, "region": {"startLine": .line_number}}}]
            }]' bandit-results.json > bandit-results-converted.json
            jq --slurpfile results bandit-results-converted.json '.runs[0].results = $results[0]' bandit-results.sarif > bandit-results-updated.sarif
            mv bandit-results-updated.sarif bandit-results.sarif
          fi

      - name: Check for vulnerable dependencies
        run: |
          pip install safety
          python -m safety scan --api-key="${{ secrets.SAFETY_API_KEY }}" -r requirements.txt || true

      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-results.sarif
