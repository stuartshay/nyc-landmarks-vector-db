name: Update NYC Landmarks Vector Database

on:
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      pages:
        description: "Number of pages to fetch"
        required: true
        default: "5"
      download_limit:
        description: "Limit the number of PDFs to download (0 for all)"
        required: true
        default: "0"

jobs:
  update-vector-db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install requests

      - name: Run pipeline script
        env:
          COREDATASTORE_API_KEY: ${{ secrets.COREDATASTORE_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        run: |
          # Use input parameters for manual runs, or defaults for scheduled runs
          PAGES=${{ github.event.inputs.pages || '5' }}
          DOWNLOAD_LIMIT=${{ github.event.inputs.download_limit || '0' }}

          # Create data directory
          mkdir -p data/pdfs

          # Run the pipeline
          python scripts/process_landmarks.py --start-page 1 --end-page $PAGES --page-size 10 --recreate-index

      - name: Upload pipeline logs
        uses: actions/upload-artifact@v3
        with:
          name: pipeline-logs
          path: |
            pipeline.log
            data/pipeline_stats.json

      - name: Create report summary
        run: |
          echo "## NYC Landmarks Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Ran pipeline script with:" >> $GITHUB_STEP_SUMMARY
          echo "- Pages: ${{ github.event.inputs.pages || '5' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Download limit: ${{ github.event.inputs.download_limit || '0' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Results" >> $GITHUB_STEP_SUMMARY
          cat data/pipeline_stats.json >> $GITHUB_STEP_SUMMARY
