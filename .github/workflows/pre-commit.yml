name: Pre-commit Checks

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [master]
  push:
    branches: [master]

permissions:
  contents: write
  pull-requests: write

jobs:
  pre-commit:
    name: Pre-commit Checks
    runs-on: ubuntu-latest
    # Run on regular PRs OR Dependabot PRs (but not both for the same PR)
    if: |
      (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # For pull_request_target events (Dependabot), checkout the PR head
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.ref }}
          # Use a token that can push back to the PR
          token: ${{ github.event_name == 'pull_request_target' && secrets.GITHUB_TOKEN || github.token }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.12"

      - name: Install gitleaks
        run: |
          # Install gitleaks for secret scanning
          wget -O gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.21.4/gitleaks_8.21.4_linux_x64.tar.gz
          tar -xzf gitleaks.tar.gz
          sudo mv gitleaks /usr/local/bin/
          rm gitleaks.tar.gz
          gitleaks version  # Verify installation

      - name: Set up Docker
        run: |
          # Ensure Docker is available for hadolint (should be pre-installed)
          docker --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pip install -r requirements.txt
          # Explicitly install all pre-commit hook dependencies
          pip install black isort flake8 flake8-docstrings flake8-quotes flake8-comprehensions mypy types-requests types-PyYAML bandit detect-secrets
          # Install mdformat and its dependencies for consistent behavior
          pip install mdformat mdformat-gfm mdformat-black mdformat-frontmatter mdformat-footnote

      - name: Run pre-commit checks
        run: |
          # Install pre-commit hooks first
          pre-commit install-hooks
          # Verify gitleaks is available
          echo "Checking gitleaks installation:"
          which gitleaks && gitleaks version || echo "⚠️ gitleaks not found"
          # Run all pre-commit checks
          pre-commit run --all-files

      # This step will automatically fix code formatting and linting issues
      - name: Fix code formatting and linting issues
        if: failure()
        run: |
          pip install autoflake
          black nyc_landmarks tests
          autoflake --in-place --remove-all-unused-imports --recursive nyc_landmarks tests
          isort nyc_landmarks tests
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -u
          git commit -m "Fix code formatting and linting issues" || echo "No changes to commit"
          git push || echo "No changes to push"
