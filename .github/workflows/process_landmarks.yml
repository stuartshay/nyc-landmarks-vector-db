name: Process NYC Landmarks Data

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      pages_to_process:
        description: 'Number of pages to fetch from API'
        required: true
        default: '1'
      parallel_workers:
        description: 'Number of parallel workers (0 for sequential)'
        required: true
        default: '2'
      recreate_index:
        description: 'Recreate Pinecone index before processing? (true/false)'
        required: false
        default: 'false'

jobs:
  process:
    runs-on: ubuntu-latest
    timeout-minutes: 60 # Adjust timeout as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Match project version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Landmark Processing Script
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          COREDATASTORE_API_KEY: ${{ secrets.COREDATASTORE_API_KEY }} # Provided as env var
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT }}
        run: |
          echo "Starting landmark processing..."
          ARGS="--pages ${{ github.event.inputs.pages_to_process }}"
          if [[ "${{ github.event.inputs.parallel_workers }}" -gt 0 ]]; then
            ARGS="$ARGS --parallel --workers ${{ github.event.inputs.parallel_workers }}"
          fi
          if [[ "${{ github.event.inputs.recreate_index }}" == "true" ]]; then
            ARGS="$ARGS --recreate-index"
          fi

          # Note: The script's --api-key argument is NOT being used here.
          # COREDATASTORE_API_KEY is only provided as an environment variable.
          # If the script specifically needs the --api-key argument, we need to adjust this step.
          python scripts/process_landmarks.py $ARGS
          echo "Landmark processing finished."
