name: Python CI

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [master]

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    name: Python CI Tests
    runs-on: ubuntu-latest
    # Run on regular PRs OR Dependabot PRs (but not both for the same PR)
    if: |
      (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name == 'push')
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4
        with:
          # For pull_request_target events (Dependabot), checkout the PR head
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install requirements first
          echo "Installing base requirements..."
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
            echo "Base requirements installed successfully"
          fi
          # Install the package itself in development mode
          echo "Installing package in development mode..."
          pip install -e ".[dev]"
          echo "Development installation completed"
          # Verify critical packages are available
          python -c "import pytest, black, isort, mypy, flake8; print('All testing tools imported successfully')"

      - name: Lint with flake8
        run: |
          flake8 nyc_landmarks tests scripts notebooks .
        continue-on-error: true

      - name: Check formatting with black
        run: |
          black --check nyc_landmarks tests scripts notebooks
        continue-on-error: true

      - name: Sort imports with isort
        run: |
          isort --check --profile black nyc_landmarks tests scripts notebooks
        continue-on-error: true

      - name: Type checking with mypy
        run: |
          mypy --config-file=mypy.ini --disable-error-code=misc nyc_landmarks scripts tests
        continue-on-error: true

      - name: Security scan with bandit
        run: |
          bandit -c pyproject.toml -r nyc_landmarks
        continue-on-error: true

      - name: Test with pytest (unit tests only)
        run: |
          # Run only unit tests in CI to avoid dependency/credential issues
          # Skip both integration and functional tests as they require API access
          python -m pytest --cov=nyc_landmarks -m "not integration and not functional" tests/
