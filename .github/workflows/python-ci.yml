name: Python CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e ".[dev]"
          # Install all linting and testing tools
          pip install pytest pytest-cov flake8 black isort mypy bandit

      - name: Lint with flake8
        run: |
          flake8 nyc_landmarks tests scripts notebooks .
        continue-on-error: true

      - name: Check formatting with black
        run: |
          black --check nyc_landmarks tests scripts notebooks
        continue-on-error: true

      - name: Sort imports with isort
        run: |
          isort --check --profile black nyc_landmarks tests scripts notebooks
        continue-on-error: true

      - name: Type checking with mypy
        run: |
          mypy nyc_landmarks scripts
        continue-on-error: true

      - name: Security scan with bandit
        run: |
          bandit -c pyproject.toml -r nyc_landmarks
        continue-on-error: true

      - name: Test with pytest (unit tests only)
        run: |
          # Run only unit tests in CI to avoid dependency/credential issues
          # Skip both integration and functional tests as they require API access
          python -m pytest --cov=nyc_landmarks -m "not integration and not functional" tests/
